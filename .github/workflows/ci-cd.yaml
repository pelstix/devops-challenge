name: Build and Push Docker Images

on:
  push:
    branches:
      - main
      - master  
      - devops
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_KEY: ${{ secrets.DOCKERHUB_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: |
          ~/.docker/cache
        key: ${{ runner.os }}-build-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-build-

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_KEY }}

    - name: Build and push a
      uses: docker/build-push-action@v4
      with:
        context: bird
        push: true
        tags: ${{ env.DOCKERHUB_USERNAME }}/bird:latest

    - name: Build and push b
      uses: docker/build-push-action@v4
      with:
        context: birdImage
        push: true
        tags: ${{ env.DOCKERHUB_USERNAME }}/birdimage:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.BASTION_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        # Optional: Add bastion host to known_hosts to avoid prompt during SSH
        ssh-keyscan -H ${{ secrets.BASTION_HOST }} >> ~/.ssh/known_hosts
      env:
        BASTION_SSH_KEY: ${{ secrets.BASTION_SSH_KEY }}
        BASTION_HOST: ${{ secrets.BASTION_HOST }}

    # Copy Helm charts to the bastion host
    - name: Copy Helm charts to Bastion
      run: |
        scp -i ~/.ssh/id_rsa -r ./bird/helm ubuntu@${{ secrets.BASTION_HOST }}:/home/ubuntu/bird
        scp -i ~/.ssh/id_rsa -r ./birdImage/helm ubuntu@${{ secrets.BASTION_HOST }}:/home/ubuntu/birdimage
      env:
        BASTION_HOST: ${{ secrets.BASTION_HOST }}

    # SSH into the bastion and deploy using Helm from the bastion host
    - name: Deploy Helm Charts from Bastion
      run: |
        ssh -i ~/.ssh/id_rsa ubuntu@${{ secrets.BASTION_HOST }} << 'EOF'
          # Set kubeconfig on bastion (assuming it's already configured on bastion)
          export KUBECONFIG=/home/ubuntu/.kube/config
          
          # Deploy the bird API Helm chart
          helm upgrade --install bird /home/ubuntu/bird/helm --namespace bird-apps

          # Deploy the birdImage API Helm chart
          helm upgrade --install birdimage /home/ubuntu/birdimage/helm --namespace bird-apps

          # Optional: Verify releases
          helm ls --namespace bird-apps
        EOF
      env:
        BASTION_HOST: ${{ secrets.BASTION_HOST }}
